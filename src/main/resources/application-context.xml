<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
    <bean name="ingestSink" class="au.com.twitter.ingest.sink.TwitterIngestSink">
        <constructor-arg ref="twitterClientBuilder" />
        <constructor-arg ref="twitterIngestService" />
        <constructor-arg ref="msgQueue" />
        <constructor-arg ref="eventQueue" />
    </bean>        
        
     <bean name="msgQueue" class="java.util.concurrent.LinkedBlockingQueue">
        <constructor-arg  value="${endpoint.config.msg.queue.size}" />
     </bean>
     
     <bean name="eventQueue" class="java.util.concurrent.LinkedBlockingQueue">
        <constructor-arg  value="${endpoint.config.event.queue.size}" />
     </bean>   
       
    <bean name="hosebirdEndpoint" class="com.twitter.hbc.core.endpoint.StatusesFilterEndpoint" />   
     
    <bean name="hosebirdAuth" class="com.twitter.hbc.httpclient.auth.OAuth1">
        <constructor-arg value="${security.oauth.consumer.key}" />
        <constructor-arg value="${security.oauth.consumer.secret}" />
        <constructor-arg value="${security.oauth.token}" />
        <constructor-arg value="${security.oauth.secret}" />
    </bean>
     
     <bean name="twitterClientBuilder" class="au.com.twitter.ingest.model.TwitterClientBuilder">
        <property name="name" value="TwitterAFLIngest" />
        <property name="hosts" ref="httpHosts" />
        <property name="authentication" ref="hosebirdAuth" />
        <property name="endpoint" ref="hosebirdEndpoint" />
        <property name="processor" ref="processor" />
        <property name="eventMessageQueue" ref="eventQueue" />
     </bean>
     
    <bean name="httpHosts" class="com.twitter.hbc.core.HttpHosts">
        <constructor-arg value="https://stream.twitter.com" />
    </bean>    
    
    <bean name="processor" class="com.twitter.hbc.core.processor.StringDelimitedProcessor">
        <constructor-arg ref="msgQueue" />
    </bean>
        
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/config.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false"/>
    </bean>
        
    <bean name="twitterIngestService" class="au.com.twitter.ingest.service.TwitterIngestServiceImpl">
        <constructor-arg ref="twitterIngestDAO" />
    </bean>
    
    <bean id="genericHibernateDAO"
          abstract="true"
          class="au.com.twitter.ingest.dao.GenericHibernateDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
        
    <bean name="twitterIngestDAO" class="au.com.twitter.ingest.dao.TwitterIngestDAOImpl" parent="genericHibernateDAO">
    </bean>
        
</beans>